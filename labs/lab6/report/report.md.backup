---
## Front matter
title: "Отчет по лабораторной работе №6"
subtitle: "Основы информационной безопасности"
author: "Ищенко Ирина НПИбд-02-22"

## Generic otions
lang: ru-RU
toc-title: "Содержание"

## Bibliography
bibliography: bib/cite.bib
csl: pandoc/csl/gost-r-7-0-5-2008-numeric.csl

## Pdf output format
toc: true # Table of contents
toc-depth: 2
lof: true # List of figures
lot: true # List of tables
fontsize: 12pt
linestretch: 1.5
papersize: a4
documentclass: scrreprt
## I18n polyglossia
polyglossia-lang:
  name: russian
  options:
	- spelling=modern
	- babelshorthands=true
polyglossia-otherlangs:
  name: english
## I18n babel
babel-lang: russian
babel-otherlangs: english
## Fonts
mainfont: PT Serif
romanfont: PT Serif
sansfont: PT Sans
monofont: PT Mono
mainfontoptions: Ligatures=TeX
romanfontoptions: Ligatures=TeX
sansfontoptions: Ligatures=TeX,Scale=MatchLowercase
monofontoptions: Scale=MatchLowercase,Scale=0.9
## Biblatex
biblatex: true
biblio-style: "gost-numeric"
biblatexoptions:
  - parentracker=true
  - backend=biber
  - hyperref=auto
  - language=auto
  - autolang=other*
  - citestyle=gost-numeric
## Pandoc-crossref LaTeX customization
figureTitle: "Рис."
tableTitle: "Таблица"
listingTitle: "Листинг"
lofTitle: "Список иллюстраций"
lotTitle: "Список таблиц"
lolTitle: "Листинги"
## Misc options
indent: true
header-includes:
  - \usepackage{indentfirst}
  - \usepackage{float} # keep figures where there are in the text
  - \floatplacement{figure}{H} # keep figures where there are in the text
---

# Цель работы

Развить навыки администрирования ОС Linux. Получить первое практическое знакомство с технологией SELinux [@infosec]. Проверить работу SELinx на практике совместно с веб-сервером
Apache.

# Выполнение лабораторной работы

Войдем в систему с полученными учётными данными и убедимся, что
SELinux работает в режиме enforcing политики targeted с помощью команд getenforce и sestatus.
Обратимся с помощью браузера к веб-серверу, запущенному на вашем
компьютере, и убедимся, что последний работает (рис. [-@fig:001]) и (рис. [-@fig:002]):
service httpd status

![Проверка статуса](image/1.png){#fig:001 width=70%}

![Проверка статуса](image/2.png){#fig:002 width=70%}

Найдем веб-сервер Apache в списке процессов, определим его контекст
безопасности 
ps auxZ | grep httpd

Посмотрим текущее состояние переключателей SELinux для Apache с
помощью команды (рис. [-@fig:003]).
sestatus -b | grep httpd

![Переключатели](image/3.png){#fig:003 width=70%}

Посмотрим статистику по политике с помощью команды seinfo, также
определим множество пользователей, ролей, типов (рис. [-@fig:004]).

![Статистика по политике](image/4.png){#fig:004 width=70%}

Определим тип файлов и поддиректорий, находящихся в директории
/var/www, с помощью команды (рис. [-@fig:005]).
ls -lZ /var/www

![Типы файлов и поддиректории](image/5.png){#fig:005 width=70%}

Определим тип файлов, находящихся в директории /var/www/html:
ls -lZ /var/www/html
Определим круг пользователей, которым разрешено создание файлов в
директории /var/www/html.
Создадим от имени суперпользователя (так как в дистрибутиве после установки только ему разрешена запись в директорию) html-файл /var/www/html/test.html следующего содержания (рис. [-@fig:006]):
<html>
<body>test</body>
</html>

![Файл](image/6.png){#fig:006 width=70%}

Проверим контекст созданного вами файла (рис. [-@fig:007]).

![Контекст](image/7.png){#fig:007 width=70%}

Обратимся к файлу через веб-сервер, введя в браузере адрес
http://127.0.0.1/test.html. Убедимся, что файл был успешно отображён (рис. [-@fig:008]).

![Проверка отображения файла](image/8.png){#fig:008 width=70%}

Изучим справку man httpd_selinux и выясним, какие контексты файлов определены для httpd. Сопоставим их с типом файла test.html. Проверим контекст файла можно командой ls -Z.
ls -Z /var/www/html/test.html
Изменим контекст файла /var/www/html/test.html с
httpd_sys_content_t на любой другой, к которому процесс httpd не
должен иметь доступа, например, на samba_share_t (рис. [-@fig:009]):
chcon -t samba_share_t /var/www/html/test.html
ls -Z /var/www/html/test.html

![Изменение контекста](image/9.png){#fig:009 width=70%}

После этого проверим, что контекст поменялся.
Попробуем ещё раз получить доступ к файлу через веб-сервер, введя в
браузере адрес http://127.0.0.1/test.html (рис. [-@fig:0010]). 

![Проверка отображения файла](image/10.png){#fig:0010 width=70%}

ls -l /var/www/html/test.html
Просмотрим log-файлы веб-сервера Apache. Также просмотрим системный лог-файл (рис. [-@fig:0011]):
tail /var/log/messages

![Лог-файл](image/11.png){#fig:0011 width=70%}

Если в системе окажутся запущенными процессы setroubleshootd и
audtd, то вы также сможете увидеть ошибки, аналогичные указанным
выше, в файле /var/log/audit/audit.log. Проверим это утверждение самостоятельно (рис. [-@fig:0012]).

![/var/log/audit/audit.log](image/12.png){#fig:0012 width=70%}


Попробуем запустить веб-сервер Apache на прослушивание ТСР-порта
81 (а не 80, как рекомендует IANA и прописано в /etc/services). Для
этого в файле /etc/httpd/httpd.conf найдите строчку Listen 80 и
заменим её на Listen 81 (рис. [-@fig:0013]).

![Замана порта](image/13.png){#fig:0013 width=70%}

Выполним перезапуск веб-сервера Apache. Сбой не произошел, так как порт существует.

Проанализируем лог-файлы (рис. [-@fig:0014]):
tail -n1 /var/log/messages

![Лог-файл](image/14.png){#fig:0014 width=70%}

Просмотрим файлы /var/log/http/error_log (рис. [-@fig:0015]),
/var/log/httpd/access_log (рис. [-@fig:0016]) и /var/log/audit/audit.log (рис. [-@fig:0017]).

![/var/log/httpd/error_log](image/15.png){#fig:0015 width=70%}

![/var/log/httpd/access_log](image/16.png){#fig:0016 width=70%}

![/var/log/audit/audit.log](image/17.png){#fig:0017 width=70%}

Выполним команду
semanage port -a -t http_port_t -р tcp 81
После этого проверим список портов командой
semanage port -l | grep http_port_t
Попробуем запустить веб-сервер Apache ещё раз. 
Вернем контекст httpd_sys_cоntent__t к файлу /var/www/html/ test.html (рис. [-@fig:0018]):
chcon -t httpd_sys_content_t /var/www/html/test.html

![Контескт](image/18.png){#fig:0018 width=70%}

После этого попробуем получить доступ к файлу через веб-сервер, введя в браузере адрес http://127.0.0.1:81/test.html (рис. [-@fig:0019]).

![Проверка отображения файла](image/19.png){#fig:0019 width=70%}

Исправим обратно конфигурационный файл apache, вернув Listen 80 (рис. [-@fig:0020]).

![Возвращение исходной конфигурации](image/20.png){#fig:0020 width=70%}

Удалим привязку http_port_t к 81 порту:
semanage port -d -t http_port_t -p tcp 81
Удаление не произошло.

Удалим файл /var/www/html/test.html (рис. [-@fig:0021]):
rm /var/www/html/test.html

![Удаление привязки к порту и файла](image/21.png){#fig:0021 width=70%}

# Выводы

В ходе лабораторной работы я развила навыки администрирования ОС Linux. Получила первое практическое знакомство с технологией SELinux. Проверила работу SELinx на практике совместно с веб-сервером Apache.


# Список литературы{.unnumbered}

::: {#refs}
:::
